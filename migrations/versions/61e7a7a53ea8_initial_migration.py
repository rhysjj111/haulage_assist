"""Initial migration

Revision ID: 61e7a7a53ea8
Revises: 
Create Date: 2024-09-09 17:07:13.757825

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '61e7a7a53ea8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('running_costs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('year', sa.Date(), nullable=False),
    sa.Column('office_staff', sa.Integer(), nullable=False),
    sa.Column('truck_finance', sa.Integer(), nullable=False),
    sa.Column('goods_in_transit', sa.Integer(), nullable=False),
    sa.Column('truck_maintenance', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('truck',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('registration', sa.String(length=8), nullable=False),
    sa.Column('make', sa.String(length=50), nullable=False),
    sa.Column('model', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('truck', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_truck_registration'), ['registration'], unique=True)

    op.create_table('driver',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('basic_wage', sa.Integer(), nullable=False),
    sa.Column('daily_bonus_threshold', sa.Integer(), nullable=False),
    sa.Column('daily_bonus_percentage', sa.Float(), nullable=False),
    sa.Column('weekly_bonus_threshold', sa.Integer(), nullable=False),
    sa.Column('weekly_bonus_percentage', sa.Float(), nullable=False),
    sa.Column('overnight_value', sa.Integer(), nullable=False),
    sa.Column('truck_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['truck_id'], ['truck.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('first_name', 'last_name', name='_full_name_uc')
    )
    op.create_table('fuel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('truck_id', sa.Integer(), nullable=False),
    sa.Column('fuel_card_name', sa.String(length=50), nullable=False),
    sa.Column('fuel_volume', sa.Integer(), nullable=False),
    sa.Column('fuel_cost', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['truck_id'], ['truck.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('fuel', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_fuel_date'), ['date'], unique=False)
        batch_op.create_index(batch_op.f('ix_fuel_fuel_card_name'), ['fuel_card_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_fuel_truck_id'), ['truck_id'], unique=False)

    op.create_table('day',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('driver_id', sa.Integer(), nullable=False),
    sa.Column('truck_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('overnight', sa.Boolean(), nullable=False),
    sa.Column('fuel', sa.Boolean(), nullable=True),
    sa.Column('test', sa.Boolean(), nullable=True),
    sa.Column('start_mileage', sa.Integer(), nullable=False),
    sa.Column('end_mileage', sa.Integer(), nullable=False),
    sa.Column('additional_earned', sa.Integer(), nullable=False),
    sa.Column('additional_wages', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['driver_id'], ['driver.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['truck_id'], ['truck.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('driver_id', 'date', name='_driver_date_uc')
    )
    with op.batch_alter_table('day', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_day_date'), ['date'], unique=False)
        batch_op.create_index(batch_op.f('ix_day_driver_id'), ['driver_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_day_truck_id'), ['truck_id'], unique=False)

    op.create_table('payslip',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('driver_id', sa.Integer(), nullable=False),
    sa.Column('total_wage', sa.Integer(), nullable=False),
    sa.Column('total_cost_to_employer', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['driver_id'], ['driver.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('driver_id', 'date', name='_driver_date_ps_uc')
    )
    with op.batch_alter_table('payslip', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_payslip_date'), ['date'], unique=False)
        batch_op.create_index(batch_op.f('ix_payslip_driver_id'), ['driver_id'], unique=False)

    op.create_table('job',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('day_id', sa.Integer(), nullable=False),
    sa.Column('earned', sa.Integer(), nullable=False),
    sa.Column('collection', sa.String(length=50), nullable=False),
    sa.Column('delivery', sa.String(length=50), nullable=False),
    sa.Column('notes', sa.String(length=50), nullable=True),
    sa.Column('split', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['day_id'], ['day.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('job', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_job_day_id'), ['day_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('job', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_job_day_id'))

    op.drop_table('job')
    with op.batch_alter_table('payslip', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_payslip_driver_id'))
        batch_op.drop_index(batch_op.f('ix_payslip_date'))

    op.drop_table('payslip')
    with op.batch_alter_table('day', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_day_truck_id'))
        batch_op.drop_index(batch_op.f('ix_day_driver_id'))
        batch_op.drop_index(batch_op.f('ix_day_date'))

    op.drop_table('day')
    with op.batch_alter_table('fuel', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_fuel_truck_id'))
        batch_op.drop_index(batch_op.f('ix_fuel_fuel_card_name'))
        batch_op.drop_index(batch_op.f('ix_fuel_date'))

    op.drop_table('fuel')
    op.drop_table('driver')
    with op.batch_alter_table('truck', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_truck_registration'))

    op.drop_table('truck')
    op.drop_table('running_costs')
    # ### end Alembic commands ###
