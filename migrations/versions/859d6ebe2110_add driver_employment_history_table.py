"""add driver employment history table

Revision ID: 859d6ebe2110
Revises: f3de9805f6ad
Create Date: 2025-07-19 15:42:28.320467

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '859d6ebe2110'
down_revision = 'f3de9805f6ad'
branch_labels = None
depends_on = None


def upgrade():

    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('DROP TYPE IF EXISTS employmentstatus CASCADE')
    op.create_table('driver_employment_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('driver_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('employment_status', sa.Enum('ACTIVE', 'INACTIVE', name='employmentstatus'), nullable=False),
    sa.CheckConstraint('end_date IS NULL OR end_date > start_date', name='valid_employment_period'),
    sa.ForeignKeyConstraint(['driver_id'], ['driver.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('driver_employment_history', schema=None) as batch_op:
        batch_op.create_index('idx_driver_employment_dates', ['driver_id', 'start_date', 'end_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_driver_employment_history_driver_id'), ['driver_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_driver_employment_history_end_date'), ['end_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_driver_employment_history_start_date'), ['start_date'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('driver_employment_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_driver_employment_history_start_date'))
        batch_op.drop_index(batch_op.f('ix_driver_employment_history_end_date'))
        batch_op.drop_index(batch_op.f('ix_driver_employment_history_driver_id'))
        batch_op.drop_index('idx_driver_employment_dates')

    op.drop_table('driver_employment_history')
    
    op.execute('DROP TYPE IF EXISTS employmentstatus CASCADE')    
    # ### end Alembic commands ###
