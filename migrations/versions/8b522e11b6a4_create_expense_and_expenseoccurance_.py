"""Create Expense and ExpenseOccurance tables. Remove Running_cost table.

Revision ID: 8b522e11b6a4
Revises: 89f18f48cf69
Create Date: 2024-10-22 05:51:59.378337

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8b522e11b6a4'
down_revision = '89f18f48cf69'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('expense',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('expense', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_expense_name'), ['name'], unique=False)

    op.create_table('expense_occurance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('expense_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('date_start', sa.Date(), nullable=False),
    sa.Column('date_end', sa.Date(), nullable=True),
    sa.Column('cost', sa.Integer(), nullable=False),
    sa.Column('frequency', sa.Enum('Weekly', 'Monthly', 'Yearly', 'One-off'), nullable=False),
    sa.ForeignKeyConstraint(['expense_id'], ['expense.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('expense_occurance', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_expense_occurance_date_end'), ['date_end'], unique=False)
        batch_op.create_index(batch_op.f('ix_expense_occurance_date_start'), ['date_start'], unique=False)
        batch_op.create_index(batch_op.f('ix_expense_occurance_expense_id'), ['expense_id'], unique=False)

    op.drop_table('running_costs')
    with op.batch_alter_table('day', schema=None) as batch_op:
        batch_op.add_column(sa.Column('timestamp', sa.DateTime(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('day', schema=None) as batch_op:
        batch_op.drop_column('timestamp')

    op.create_table('running_costs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('year', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('office_staff', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('truck_finance', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('goods_in_transit', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('truck_maintenance', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='running_costs_pkey')
    )
    with op.batch_alter_table('expense_occurance', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_expense_occurance_expense_id'))
        batch_op.drop_index(batch_op.f('ix_expense_occurance_date_start'))
        batch_op.drop_index(batch_op.f('ix_expense_occurance_date_end'))

    op.drop_table('expense_occurance')
    with op.batch_alter_table('expense', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_expense_name'))

    op.drop_table('expense')
    # ### end Alembic commands ###
