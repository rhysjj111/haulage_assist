"""Create UserFeedback, Anomaly and MissingAnomaly tables.

Revision ID: 3ede6ebb4573
Revises: c477a7b98afa
Create Date: 2025-02-20 09:04:36.838676

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '3ede6ebb4573'
down_revision = 'c477a7b98afa'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('anomaly',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('is_recurring', sa.Boolean(), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_feedback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('anomaly_id', sa.Integer(), nullable=False),
    sa.Column('anomaly_invalid', sa.Boolean(), nullable=False),
    sa.Column('anomaly_rectified', sa.Boolean(), nullable=False),
    sa.Column('user_comment', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['anomaly_id'], ['anomaly.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('missing_anomaly',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('driver_id', sa.Integer(), nullable=True),
    sa.Column('truck_id', sa.Integer(), nullable=True),
    sa.Column('table_name', sa.Enum('DRIVER', 'TRUCK', 'DAY', 'JOB', 'FUEL', 'PAYSLIP', name='tablename'), nullable=False),
    sa.ForeignKeyConstraint(['driver_id'], ['driver.id'], ),
    sa.ForeignKeyConstraint(['id'], ['anomaly.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['truck_id'], ['truck.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('missing_anomaly', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_missing_anomaly_date'), ['date'], unique=False)
        batch_op.create_index(batch_op.f('ix_missing_anomaly_driver_id'), ['driver_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_missing_anomaly_truck_id'), ['truck_id'], unique=False)

    with op.batch_alter_table('day', schema=None) as batch_op:
        batch_op.drop_index('ix_day_week_number')
        batch_op.drop_column('week_number')

    with op.batch_alter_table('fuel', schema=None) as batch_op:
        batch_op.drop_index('ix_fuel_week_number')
        batch_op.drop_column('week_number')

    with op.batch_alter_table('payslip', schema=None) as batch_op:
        batch_op.add_column(sa.Column('week_number_mtf', sa.Integer(), sa.Computed('((EXTRACT(DOW FROM date) + EXTRACT(week FROM date) * 7 - 6) / 7)::integer', ), nullable=False))
        batch_op.drop_index('ix_payslip_week_number')
        batch_op.drop_constraint('_driver_week_payslip_uc', type_='unique')
        batch_op.create_unique_constraint('_driver_week_payslip_uc', ['driver_id', 'week_number_mtf'])
        batch_op.create_index(batch_op.f('ix_payslip_week_number_mtf'), ['week_number_mtf'], unique=False)
        batch_op.drop_column('week_number')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('payslip', schema=None) as batch_op:
        batch_op.add_column(sa.Column('week_number', sa.INTEGER(), sa.Computed('((((EXTRACT(dow FROM date) + (EXTRACT(week FROM date) * (7)::numeric)) - (6)::numeric) / (7)::numeric))::integer', persisted=True), autoincrement=False, nullable=False))
        batch_op.drop_index(batch_op.f('ix_payslip_week_number_mtf'))
        batch_op.drop_constraint('_driver_week_payslip_uc', type_='unique')
        batch_op.create_unique_constraint('_driver_week_payslip_uc', ['driver_id', 'week_number'])
        batch_op.create_index('ix_payslip_week_number', ['week_number'], unique=False)
        batch_op.drop_column('week_number_mtf')

    with op.batch_alter_table('fuel', schema=None) as batch_op:
        batch_op.add_column(sa.Column('week_number', sa.INTEGER(), sa.Computed('((((EXTRACT(dow FROM date) + (EXTRACT(week FROM date) * (7)::numeric)) - (6)::numeric) / (7)::numeric))::integer', persisted=True), autoincrement=False, nullable=False))
        batch_op.create_index('ix_fuel_week_number', ['week_number'], unique=False)

    with op.batch_alter_table('day', schema=None) as batch_op:
        batch_op.add_column(sa.Column('week_number', sa.INTEGER(), sa.Computed('((((EXTRACT(dow FROM date) + (EXTRACT(week FROM date) * (7)::numeric)) - (6)::numeric) / (7)::numeric))::integer', persisted=True), autoincrement=False, nullable=False))
        batch_op.create_index('ix_day_week_number', ['week_number'], unique=False)

    with op.batch_alter_table('missing_anomaly', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_missing_anomaly_truck_id'))
        batch_op.drop_index(batch_op.f('ix_missing_anomaly_driver_id'))
        batch_op.drop_index(batch_op.f('ix_missing_anomaly_date'))

    op.drop_table('missing_anomaly')
    op.drop_table('user_feedback')
    op.drop_table('anomaly')
    # ### end Alembic commands ###
