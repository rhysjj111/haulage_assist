"""Add driver employment history table

Revision ID: b6c02627924c
Revises: f3de9805f6ad
Create Date: 2025-07-18 17:18:22.786998

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b6c02627924c'
down_revision = 'f3de9805f6ad'
branch_labels = None
depends_on = None


def upgrade():
    # Create the enum type first (for PostgreSQL)
    employment_status_enum = sa.Enum(
        'active', 'terminated', 'resigned', 'retired', 'laid_off', 'probation', 'suspended', 
        name='employmentstatus'
    )
    employment_status_enum.create(op.get_bind(), checkfirst=True)
    
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('driver_employment_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('driver_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('employment_status', employment_status_enum, nullable=False, server_default='active'),
    sa.Column('employment_period_number', sa.Integer(), nullable=False, server_default='1'),
    sa.Column('reason_for_leaving', sa.String(length=200), nullable=True),
    sa.Column('reason_for_rehire', sa.String(length=200), nullable=True),
    sa.Column('notes', sa.String(length=500), nullable=True),
    sa.CheckConstraint('end_date IS NULL OR end_date > start_date', name='valid_employment_period'),
    sa.CheckConstraint('employment_period_number >= 1', name='valid_employment_period_number'),
    sa.ForeignKeyConstraint(['driver_id'], ['driver.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('driver_employment_history', schema=None) as batch_op:
        batch_op.create_index('idx_driver_employment_dates', ['driver_id', 'start_date', 'end_date'], unique=False)
        batch_op.create_index('idx_driver_employment_status', ['employment_status'], unique=False)
        batch_op.create_index('idx_driver_employment_period', ['driver_id', 'employment_period_number'], unique=False)
        batch_op.create_index(batch_op.f('ix_driver_employment_history_driver_id'), ['driver_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_driver_employment_history_end_date'), ['end_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_driver_employment_history_start_date'), ['start_date'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('driver_employment_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_driver_employment_history_start_date'))
        batch_op.drop_index(batch_op.f('ix_driver_employment_history_end_date'))
        batch_op.drop_index(batch_op.f('ix_driver_employment_history_driver_id'))
        batch_op.drop_index('idx_driver_employment_period')
        batch_op.drop_index('idx_driver_employment_status')
        batch_op.drop_index('idx_driver_employment_dates')

    op.drop_table('driver_employment_history')
    
    # Drop the enum type (for PostgreSQL)
    sa.Enum(name='employmentstatus').drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
